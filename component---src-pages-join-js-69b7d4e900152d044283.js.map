{"version":3,"file":"component---src-pages-join-js-69b7d4e900152d044283.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@babel/runtime/regenerator/index.js","webpack://gatsby-starter-default/./src/styles/header.module.scss","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://gatsby-starter-default/./src/pages/join.js","webpack://gatsby-starter-default/./src/styles/join.module.scss","webpack://gatsby-starter-default/./node_modules/regenerator-runtime/runtime.js","webpack://gatsby-starter-default/./src/svg/ace_triangle.svg"],"sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","// extracted by mini-css-extract-plugin\nexport var container = \"header-module--container--YhtQ8\";\nexport var innerContainer = \"header-module--innerContainer--YZPrp\";\nexport var logo = \"header-module--logo--N68Fy\";\nexport var links = \"header-module--links--csnKu\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport AceLogo from \"../svg/ace_triangle.svg\"\n\nimport * as styles from \"../styles/header.module.scss\"\n\nconst Header = () => (\n  <header className={styles.container}>\n    <div className={styles.innerContainer}>\n      <Link to=\"/\" className={styles.logo}>\n        <AceLogo className={styles.logo} />\n      </Link>\n\n      <div className={styles.links}>\n        <Link to=\"/about\">about</Link>\n        <Link to=\"/problems\">problems</Link>\n        <Link to=\"/join\">join</Link>\n      </div>\n    </div>\n  </header>\n)\n\nexport default Header\n","import React from \"react\"\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n\n    {children}\n  </>\n)\n\nexport default Layout\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useState } from \"react\"\nimport Layout from \"../components/layout\"\n\nimport * as styles from \"../styles/join.module.scss\"\n\nconst SubmitEmail = () => {\n  const [email, setEmail] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n\n  const addEmail = async () => {\n    const URL = \"https://mailinglist.mattfeng.tech/add\"\n    // const URL = \"http://localhost:8080/add\"\n    console.log(email)\n\n    try {\n      const response = await fetch(URL, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: `email=${encodeURIComponent(email)}`,\n      })\n      console.log(response)\n      setMessage(\"email successfully added!\")\n    } catch (e) {\n      setMessage(\"couldn't subscribe at this time.\")\n    }\n    setEmail(\"\")\n  }\n\n  return (\n    <div>\n      <div className={styles.emailContainer}>\n        <input\n          onChange={e => setEmail(e.target.value)}\n          name=\"email\"\n          className={styles.emailInput}\n          type=\"email\"\n          value={email}\n        />\n        <input\n          onClick={addEmail}\n          type=\"submit\"\n          value=\"join\"\n          className={styles.submitButton}\n        />\n      </div>\n      {message && <p>{message}</p>}\n    </div>\n  )\n}\nconst JoinPage = () => (\n  <Layout>\n    <main className={styles.mainContainer}>\n      <div className={styles.submitContainer}>\n        <p>\n          ACE is not currently recruiting. However, for updates and news, join\n          our mailing list:\n        </p>\n        <SubmitEmail />\n      </div>\n    </main>\n  </Layout>\n)\n\nexport default JoinPage\n","// extracted by mini-css-extract-plugin\nexport var container = \"join-module--container--56WIR\";\nexport var innerContainer = \"join-module--innerContainer--20UIH\";\nexport var logo = \"join-module--logo--uDWK1\";\nexport var links = \"join-module--links--Zfx6k\";\nexport var mainContainer = \"join-module--mainContainer--QZ5ZM\";\nexport var submitContainer = \"join-module--submitContainer--9pXeX\";\nexport var emailContainer = \"join-module--emailContainer--I7yYE\";\nexport var emailInput = \"join-module--emailInput--3ztpW\";\nexport var submitButton = \"join-module--submitButton--JNUFA\";","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var React = require('react');\n\nfunction AceTriangle (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"polygon\",{\"points\":\"26.56 0 0 46 53.12 46 26.56 0\"}));\n}\n\nAceTriangle.defaultProps = {\"id\":\"Layer_1\",\"data-name\":\"Layer 1\",\"viewBox\":\"0 0 53.12 46\"};\n\nmodule.exports = AceTriangle;\n\nAceTriangle.default = AceTriangle;\n"],"names":["module","exports","logo","className","to","styles","children","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","SubmitEmail","useState","email","setEmail","message","setMessage","addEmail","fn","console","log","fetch","method","mode","headers","body","encodeURIComponent","response","self","this","args","arguments","apply","err","undefined","onChange","e","target","name","type","onClick","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","React","AceTriangle","props","createElement","defaultProps","default"],"sourceRoot":""}